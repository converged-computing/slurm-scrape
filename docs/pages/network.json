{
    "url": "https://slurm.schedmd.com/network.html",
    "sections": [
        {
            "title": "\n\nSlurm Workload Manager\n\n",
            "content": "\n\nSchedMD\n\n"
        },
        {
            "title": "Network Configuration Guide",
            "content": "Contents\nOverview\nCommunication for slurmctld\nCommunication for slurmdbd\nCommunication for slurmd\nCommunication for client commands\nCommunication for multiple controllers\nCommunication with multiple clusters\nCommunication in a federation\nCommunication with IPv6\nOverviewThere are a lot of components in a Slurm cluster that need to be able\nto communicate with each other. Some sites have security requirements that\nprevent them from opening all communications between the machines and will\nneed to be able to selectively open just the ports that are necessary.\nThis document will go over what is needed for different components to be\nable to talk to each other.Below is a diagram of a fairly typical cluster, with slurmctld\nand slurmdbd on separate machines. In smaller clusters, MySQL can run\non the same machine as the slurmdbd, but in most cases it is preferable\nto have it run on a dedicated machine. slurmd runs on the\ncompute nodes and the client commands can be installed and run from machines\nof your choosing.\n\n  Typical configuration\nCommunication for slurmctld\n\nThe default port used by slurmctld to listen for incoming requests\nis 6817. This port can be changed with the\nSlurmctldPort slurm.conf\nparameter. Slurmctld listens for incoming requests on that port and responds\nback on the same connection opened by the requestor.The machine running slurmctld needs to be able to establish\noutbound connections as well. It needs to communicate with slurmdbd\non port 6819 by default (see the slurmdbd\nsection for information on how to change this). It also needs to communicate\nwith slurmd on the compute nodes on port 6818 by default (see the\nslurmd section for information on how to change\nthis).By default, the slurmctld will listen for IPv4 traffic.  IPv6\ncommunication can be enabled by adding EnableIPv6 to the\n\nCommunicationParameters in your slurm.conf. With IPv6 enabled, you can\ndisable IPv4 by adding DisableIPv4 to the\n\nCommunicationParameters. These settings must match in both slurmdbd.conf\nand slurm.conf (see the slurmdbd section).Communication for slurmdbd\n\nThe default port used by slurmdbd to listen for incoming requests\nis 6819. This port can be changed with the\nDbdPort slurmdbd.conf parameter.\nSlurmdbd listens for incoming requests on that port and responds back\non the same connection opened by the requestor.The machine running slurmdbd needs to be able to reach the\nMySQL or MariaDB server on port 3306 by default (the port is\nconfigurable on the database side).\nThis port can be changed with the\nStoragePort slurmdbd.conf\nparameter. It also needs to be able to initiate\na connection to slurmctld on port 6819 by default (see the\nslurmctld section for information on how to\nchange this).By default, the slurmdbd will listen for IPv4 traffic.  IPv6\ncommunication can be enabled by adding EnableIPv6 to the\n\nCommunicationParameters in your slurmdbd.conf. With IPv6 enabled, you can\ndisable IPv4 by adding DisableIPv4 to the\n\nCommunicationParameters. These settings must match in both slurmdbd.conf\nand slurm.conf (see the slurmctld section).Communication for slurmd\n\nThe default port used by slurmd to listen for incoming requests\nfrom slurmctld is 6818. This port can be changed with the\nSlurmdPort slurm.conf\nparameter.The machines running srun also use a range of ports to be able\nto communicate with slurmstepd. By default these ports are chosen\nat random from the ephemeral port range, but you can use the\nSrunPortRange to specify\na range of ports from which they can be chosen. This is necessary\nfor login nodes that are behind a firewall.The machines running slurmd need to be able to establish\nconnections with slurmctld on port 6817 by default (see\nthe slurmctld section for information on how to\nchange this).By default, the slurmd communicates over IPv4.  Please see the\nslurmctld section for details on how to change this\nas the slurm.conf parameter affects slurmd daemons as well.Communication for client commands\n\nThe majority of the client commands will communicate with slurmctld\non port 6817 by default (see the slurmctld\nsection for information on how to change this) to get the information they\nneed. This includes the following commands:\nsalloc\nsacctmgr\nsbatch\nsbcast\nscancel\nscontrol\nsdiag\nsinfo\nsprio\nsqueue\nsshare\nsstat\nstrigger\nsview\nThere are also commands that communicate directly with slurmdbd on\nport 6819 by default (see the slurmdbd section\nfor information on how to change this). The following commands get information\nfrom slurmdbd:\nsacct\nsacctmgr\nsreport\nWhen a user starts a job using srun there has to be a communication\npath from the machine where srun is called to the node(s) the job is\nallocated. Communication follows the sequence outlined below:\n1a. srun sends job allocation request to slurmctld\n    1b. slurmctld grants allocation and returns details\n    2a. srun sends step create request to slurmctld\n    2b. slurmctld responds with step credential\n    3.  srun opens sockets for I/O\n    4.  srun forwards credential with task info to slurmd\n    5.  slurmd forwards request as needed (per fanout)\n    6.  slurmd forks/execs slurmstepd\n    7.  slurmstepd connects I/O and launches tasks\n    8.  On task termination, slurmstepd notifies srun\n    9.  srun notifies slurmctld of job termination\n    10. slurmctld verifies termination of all processes via slurmd and\n            releases resources for next job\n\n\n  srun communication\nCommunication with multiple controllers\n\nYou can configure a secondary slurmctld and/or slurmdbd to\nserve as a fallback if the primary should go down. The ports involved don't\nchange, but there are additional communication paths that need to be taken\ninto consideration. The client commands need to be able to reach both\nmachines running slurmctld as well as both machines running\nslurmdbd. Both instances of slurmctld need to be able to\nreach both instances of slurmdbd and each slurmdbd needs\nto be able to reach the MySQL server.\n\n  Fallback slurmctld and slurmdbd\nCommunication with multiple clusters\n\nIn environments where multiple slurmctld instances share the same\nslurmdbd you can configure each cluster to stand on their own and allow\nusers to specify a cluster to submit their jobs to. Ports\nused by the different daemons don't change, but all instances of\nslurmctld need to be able to communicate with the same instance of\nslurmdbd. You can read more about multi cluster configurations in the\nMulti-Cluster Operation\ndocumentation.\n\n  Multi-Cluster configuration\nCommunication in a federation\n\nSlurm also provides the ability to schedule jobs in a peer-to-peer fashion\nbetween multiple clusters, allowing jobs to run on the cluster that has\navailable resources first. The difference in communication needs between this\nand a multi-cluster configuration is that the two instances of slurmctld\nneed to be able to communicate with each other. There are more details about\nusing a\nFederation in the\ndocumentation.\n\n  Federation configuration\nCommunication with IPv6\n\nThe slurmctld, slurmdbd, and slurmd daemons will,\nby default, communicate using IPv4, but they can be configured to use IPv6.\nThis is handled by setting CommunicationParameters=EnableIPv6\nin your slurm.conf and slurmdbd.conf, then restarting all of the daemons.\nThe slurmd may operate over IPv4 OR IPv6 in this mode. IPv4 can be\ndisabled by setting CommunicationParameters=EnableIPv6,DisableIPv4.\nIn is mode, everything must have a valid IPv6 address or the connection will\nfail.The slurmctld expects a node to map to a single IP address (which\nwill be the first address returned when looking up the IP of the node with\ngetaddrinfo()). If you enable IPv6 on an existing cluster and the\nnodes have IPv6 addresses, you must restart the slurmd daemons for\ncommunication over IPv6 to be established.The presence of precedence ::ffff:0:0/96  100 in /etc/gai.conf\nwill cause IPv4 addresses to be returned BEFORE an IPv6 address. This might\ncause a situation where you have enabled IPv6 for Slurm, but are still seeing nodes\ncommunicate with IPv4. If there is confusion as to which address is being used\nyou can call scontrol setdebugflags +NET to enable network related\ndebug logging in your slurmctld.log.If IPv4 and IPv6 are enabled, the loopback interface may still resolve to\n127.0.0.1. This is not necessarily an indication of a problem.Last modified 25 November 2020"
        },
        {
            "title": "Navigation",
            "content": "\nSlurm Workload Manager\nVersion 24.05\n\n\nAbout\n\nOverview\nRelease Notes\n\n\n\nUsing\n\nDocumentation\nFAQ\nPublications\n\n\n\nInstalling\n\nDownload\nRelated Software\nInstallation Guide\n\n\n\nGetting Help\n\nMailing Lists\nSupport and Training\nTroubleshooting\n\n\n"
        }
    ]
}
{
    "url": "https://slurm.schedmd.com/rest_quickstart.html",
    "sections": [
        {
            "title": "\n\nSlurm Workload Manager\n\n",
            "content": "\n\nSchedMD\n\n"
        },
        {
            "title": "REST API Quick Start Guide",
            "content": "Slurm provides a REST API through the slurmrestd\ndaemon, using JSON Web Tokens for authentication.\nThis page provides a brief tutorial for setting up these components.\nSee also:\n\nREST API Reference\nREST API Implementation Details\nslurmrestd man page\n\nContents\nPrerequisites\nQuick Start\n\nRunning with systemd\nCustomizing slurmrestd.service\n\n\nBasic Usage\n\nToken management\n\n\nCommon Issues\n\nUnable to bind socket\nConnection refused\nProtocol authentication error (HTTP 500)\n      \nUnable to find requested URL (HTTP 404)\nRejecting thread config token (HTTP 401)\n      \nUnexpected URL character (HTTP 400)\n      \nOther Slurm commands not working\n\n\nPrerequisites\nThe following development libraries are required at compile time\nin order for slurmrestd to be compiled (minimum versions are on the related\nsoftware page linked below):\nHTTP Parser\n\nLibYAML (optional)\n\t\nJSON-C\nJWT Authentication\n    (optional, used in this guide)\nAdditionally, it is highly recommended that you have\nSlurmDBD set up for\naccounting. Without slurmdbd, slurmrestd may fail\nwhen loading some plugins (use\n-s to specify\nwhich to load) or when attempting JWT authentication.Quick Start\nThis may be done on a dedicated REST API machine or\nyour existing 'slurmctld' machine, depending on demand.\nInstall components for slurmrestd\n\nDEB: slurm-smd slurm-smd-slurmrestd\nRPM: slurm slurm-slurmrestd (requires\n--with slurmrestd at build time)\n\nSet up JSON Web Tokens for authentication\nEnsure /etc/slurm/slurm.conf is present and correct for your\ncluster (see Quick Start Admin Guide and\nslurm.conf man page)\nRun slurmrestd (see below for systemd\ninstructions) on your preferred [HOST]:PORT combination\n(':6820' is the default for production)\nexport SLURM_JWT=daemon\nexport SLURMRESTD_DEBUG=debug\nslurmrestd <host>:<port>\n\nAdjust SLURMRESTD_DEBUG to the desired level of output (as described on the\nman page)\nRunning with systemd\nSlurm ships with a slurmrestd service unit for systemd,\nhowever, it might require some additional setup to run properly.\nThis section assumes you have either installed slurmrestd using DEB/RPM packages\nor built it manually such that the files are in the same places.\nNote the versions associated with certain steps in the instructions\nbelow; these steps should be ignored on other versions.\nCreate a local service account to run slurmrestd. To prevent privilege\n  escalation, the user account should be:\n  \nNot root or SlurmUser\nNot used by real users or for any other functions\nNot granted any special permissions\n\nsudo useradd -M -r -s /usr/sbin/nologin -U slurmrestd\nConfigure slurmrestd service to use this user and associated group.\nThis can be accomplished in either of two ways:\n\nEdit /etc/default/slurmrestd\nor /etc/sysconfig/slurmrestd\nAdd -u slurmrestd and -g slurmrestd\nto SLURMRESTD_OPTIONS\nRun systemctl edit slurmrestd to edit overrides for the\nservice.\nAdd content like this to the prescribed location in the overrides file:\n\n[Service]\nUser=slurmrestd\nGroup=slurmrestd\n\n\n\n(Slurm 24.05 and newer) Optional: Customize the socket for\nslurmrestd. By default it will listen only on TCP port 6820. You may change\nthis behavior by changing SLURMRESTD_LISTEN\n(see Customizing slurmrestd.service).\n(Slurm 23.11 and earlier) Configure the socket for slurmrestd. This\nmay be accomplished by creating/changing permissions on the parent directory\nand/or changing the path to the socket in the service file.\n\nPermissions: The user running the service must have write+execute\npermissions on the directory that will contain the UNIX socket\nChanging socket: On Slurm 23.11, the way to change or disable the\nsocket is to modify the 'ExecStart' line of the service\n\nRun systemctl edit slurmrestd\nAdd the following contents to the [Service] section:\n\nExecStart=\nExecStart=/usr/sbin/slurmrestd $SLURMRESTD_OPTIONS\nEnvironment=SLURMRESTD_LISTEN=:6820\n\nAdjust the assignment of SLURMRESTD_LISTEN to contain the socket(s) you want\nthe daemon to listen on.\nAfter a future upgrade to Slurm 24.05+, the 'ExecStart' overrides will be\nunnecessary but will not conflict with the newer version.\n\n\n\n\nCustomizing slurmrestd.service\nThe Slurm 24.05 release changes the operation of\nthe default service file and may break existing overrides. If you have\noverridden ExecStart= to contain any TCP/UNIX sockets directly, it\nwill cause the service to fail if it duplicates any sockets contained in\nSLURMRESTD_LISTEN. These overrides will need to be changed after upgrading.The default slurmrestd.service file has two intended ways of\ncustomizing its operation:\nEnvironment files:\nThe service will read environment variables from two files:\n/etc/default/slurmrestd and /etc/sysconfig/slurmrestd.\nYou may set any environment variables recognized by\nslurmrestd,\nbut the following are particularly relevant:\n\nSLURMRESTD_OPTIONS: CLI options to add to the slurmrestd command\n(see slurmrestd)\nSLURMRESTD_LISTEN: Comma-delimited list of host:port pairs or\nunix:$SOCKET_PATH sockets to listen on\nNOTE: If this duplicates what is already set in the\n'ExecStart' line in the service file, it will fail. Starting in Slurm 24.05,\nthe default service file contains no sockets in 'ExecStart' and fully relies on\nthis variable to contain the desired sockets.\n\n\nService editing: Systemd has a built in way to edit services\nby running systemctl edit slurmrestd.\n\nThis will create an override file in '/etc/systemd/' containing directives\nthat will add to or replace directives in the default unit in '/lib/systemd/'.\n\nThe override file must have the appropriate section declaration(s)\nfor the directives you use (e.g., [Service]).\nEnvironment variables may be set with Environment=NAME=value\n(refer to systemd documentation for more details)\nChanges may be reverted by running systemctl revert slurmrestd\n\n\n\nBasic Usage\n\nFind the latest supported API version\nslurmrestd -d list\nGet an authentication token for JWT\nunset SLURM_JWT; export $(scontrol token)\n\nThis ensures an old token doesn't prevent a new one from being issued\nBy default, tokens will expire after 1800 seconds (30 minutes).\nAdd lifespan=SECONDS to the 'scontrol' command to change this.\n\n\nRun a basic curl command to hit the API when listening on a TCP host:port\ncurl -s -o \"/tmp/curl.log\" -k -vvvv \\\n-H X-SLURM-USER-TOKEN:$SLURM_JWT \\\n-X GET 'http://<server>:<port>/slurm/v0.0.<api-version>/diag'\n\n\nReplace the server, port, and api-version\nwith the appropriate values.\nExamine the output to ensure the response was 200 OK,\nand examine /tmp/curl.log for a valid JSON response.\nTry other endpoints described in the API Reference\n. Change GET to the correct method for the endpoint.\n\n\nAlternate command to use the UNIX socket instead\n\ncurl -s -o \"/tmp/curl.log\" -k -vvvv \\\n-H X-SLURM-USER-TOKEN:$SLURM_JWT \\\n--unix-socket /path/to/slurmrestd.socket \\\n'http://<server>/slurm/v0.0.<api-version>/diag'\n\n\nReplace the path, server, and api-version\nwith the appropriate values.\nExamine the output to ensure the response was 200 OK,\nand examine /tmp/curl.log for a valid JSON response.\n\n\nToken management\nThis guide provides a simple overview using scontrol to\nobtain tokens. This is a basic introductory approach that in many cases\nshould be disabled in favor of more sophisticated token management.\nRefer to the JWT page for more details.Common Issues\nIn general, look out for these things:\nValidity of authentication token in SLURM_JWT\nHostname and port number\nAPI version and endpoint\nLog output of slurmrestd\nUnable to bind socket\nThis may be due to a permissions issue while attempting to set up the socket.\nCheck the log output from slurmrestd for the path to the socket.\nEnsure that the user running the slurmrestd service has permissions to the\nparent directory of the configured socket path, or change/remove the socket path\nas described above.If it says \"Address already in use\", check the command being run\nand the contents of \"SLURMRESTD_LISTEN\" for duplicates of the same TCP or UNIX\nsocket.Connection refused\nVerify that slurmrestd is running and listening on the port you are\nattempting to connect to.Protocol authentication error (HTTP 500)\nOne common authentication problem is an expired token. Request a new one:\nunset SLURM_JWT; export $(scontrol token)This solution also applies to an HTTP 401 error caused by no authentication\ntoken being sent at all. This may appear in the slurmrestd logs as\n\"Authentication does not apply to request.\"Otherwise, consult the logs on the slurmctld and slurmdbd.Unable to find requested URL (HTTP 404)\nCheck the API Reference page to ensure you're\nusing a valid URL and the correct method for it. Pay attention to the path as\nthere are different endpoints for slurm and slurmdbd.Rejecting thread config token (HTTP 401)\nCheck that slurmrestd has loaded the auth/jwt plugin.\nYou should see a debug message like this:\nslurmrestd: debug:  auth/jwt: init: JWT authentication plugin loaded\nIf it didn't load jwt, run this in the terminal you're using for slurmrestd:\nexport SLURM_JWT=daemon\nUnexpected URL character (HTTP 400)\nCheck the request URL and slurmrestd logs for characters that may be causing\nthe URL to be parsed incorrectly. Use the appropriate URL encoding sequence in\nplace of the problematic character (e.g., / = %2F).\n\n... -X GET \"localhost:8080/slurmdb/v0.0.40/jobs?submit_time=02/28/24\"\n### 400 BAD REQUEST\n... -X GET \"localhost:8080/slurmdb/v0.0.40/jobs?submit_time=02%2F28%2F24\"\n### 200 OK\n\nOther slurm commands not working\nIf SLURM_JWT is set, other slurm commands will attempt to use JWT\nauthentication, causing failures. This can be fixed by clearing the variable:\nunset SLURM_JWTLast modified 17 July 2024"
        },
        {
            "title": "Navigation",
            "content": "\nSlurm Workload Manager\nVersion 24.05\n\n\nAbout\n\nOverview\nRelease Notes\n\n\n\nUsing\n\nDocumentation\nFAQ\nPublications\n\n\n\nInstalling\n\nDownload\nRelated Software\nInstallation Guide\n\n\n\nGetting Help\n\nMailing Lists\nSupport and Training\nTroubleshooting\n\n\n"
        }
    ]
}
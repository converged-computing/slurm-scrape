{
    "url": "https://slurm.schedmd.com/mcs.html",
    "sections": [
        {
            "title": "\n\nSlurm Workload Manager\n\n",
            "content": "\n\nSchedMD\n\n"
        },
        {
            "title": "Multi-Category Security (MCS) Guide",
            "content": "OverviewThe MCS Plugin is meant to extend the current Slurm functionality related to\njob node exclusivity and job/node information display privacy.\n\nSlurm's OverSubscribe option controls the ability of a partition to\nexecute more than one job at a time on each resource, no matter \"what type\"\nof job. Slurm job submission clients can also use the --exclusive and\n--oversubscribe parameters to request how the job can be\nshared. The ExclusiveUser\nslurm.conf parameter and the --exclusive=user client parameter value\nmodifies the exclusivity functionality. With this parameter enabled, the\n\"type of job\" now matters when considering exclusivity, so jobs can share\nresources based on job users, meaning that only jobs whose user is the\nsame can share resources. This indeed adds a new dimension to how Slurm manages\nexclusivity. With the introduction of the MCS Plugin, Slurm can now be\nconfigured to associate an MCS_label to jobs and optionally ensure that\nnodes can only be shared among jobs having the same label.\nThis adds even more degrees of freedom to how Slurm manages exclusivity,\nproviding end users with much more flexibility in this area.\nSlurm also has the PrivateData slurm.conf\nparameter, which is used to control what type of information is hidden from\nregular users. Similar to the exclusivity property, the MCS Plugin also\nextends the privacy by filtering job and/or node information\nbased on the user's access to their MCS_label. This means that privacy\nis now less restrictive, and information is not just hidden or not to regular\nusers, but now it is filtered depending on these configurable/requestable\nlabels in coordination with the PrivateData option.\n\nLimitations\n\nUse of MCS restricts the operation of Preemption.\nSpecifically, any job that has an MCS label and requests node exclusivity\naccording to that label will be prevented from preempting or being preempted by\nany job that doesn't match that label. If\nMCSParameters=enforced,select is set, these restrictions will\napply to all jobs.\nConfiguration\nTwo parameters are currently available to configure MCS: MCSPlugin\nand MCSParameters.\n\n\nMCSPlugin Specifies which plugin should be used. Plugins are\nmutually exclusive, and the type of label to be associated depends\non the loaded plugin.\n\nmcs/none is the default and disables MCS labels and functionality.\n\nmcs/account MCS labels can only take a value equal to the job's\n--account. NOTE: this option requires enabling of accounting.\n\nmcs/group MCS labels can only take a value equal to the job's user\ngroup.\n\nmcs/user MCS labels can only take a value equal to the username of\nthe job's --uid.\n\n\n\nMCS_labels on jobs can be displayed through 'squeue' with the format option\nmcslabel or through 'scontrol show job'. Nodes also acquire a MCS_label,\nwhich is inherited from the allocated job's MCS_label. The node's label can be\ndisplayed with 'scontrol show nodes'. The 'sview' command can also be used to\nsee these MCS_labels.\nUsers may either request a particular category label for a job (through the\n--mcs-label option), or use the default value generated by the specific\nMCS plugin implementation. So labels can be configured to be enforced or set\non demand, and the specific MCS Plugin is responsible for checking the validity\nof these labels. When enforced, the MCS Plugin implementation will always\nassociate a MCS label to a submitted job, either the default value or the one\nrequested by the user (if it's considered correct).\nThe selection (exclusivity) of nodes can be filtered on MCS labels either\non demand (ondemand) or always (select) or never (noselect). Users can force\nthe filter with the --exclusive=mcs option (except if noselect mode is\nenabled).\n\nLabel enforcement, node selection filtering policy, private data based on\nlabels and a list of user groups allowed to be mapped to MCS labels can be\nconfigured through MCSParameters option.\n\nMCSParameters Specifies the options to pass to the specific MCS\nPlugin implementation. Options should satisfy the following expression:\n\n\"[ondemand|enforced][,noselect|select|ondemandselect][,privatedata]:[mcs_plugin_parameters]\".\nThe defaults are \"ondemand,ondemandselect\" and no privatedata.\n\n\n\nondemand|enforced set MCS label on jobs either on demand (using\n--mcs-label option) or always\nnoselect|select|ondemandselect select nodes with filter on MCS\nlabel: never, always or on demand (using --exclusive=mcs option)\nprivatedata accordingly with PrivateData specific option:\n\n\nIf configured with privatedata and PrivateData=jobs, job\ninformation is filtered based on their MCS labels.\n\n\nIf configured with privatedata and PrivateData=nodes, node\ninformation is filtered based on their MCS labels.\n\n\nmcs_plugin_parameters Only mcs/group is currently supporting this\noption. It can be used to specify the list of user groups (separated by the\n'|' character) that are allowed to be mapped to MCS labels by the\nmcs/group plugin.\n\n\n\n\nWhen enforcing privatedata with mcs/account, users will need to have an\nassociation with just the relevant Account to see other jobs in that Account.\nIf a Partition is included in the association, it will be over-constrained\nand will not allow them to view other jobs in the Account.\n\nDifferent requests and configurations lead to different combinations of\nuse-cases. The following table is intended to help understand the end user\nthe expected behavior (related to exclusivity) for a subset of these use-cases:\n\n\n\n\n\n\t\t        Node filtering:\n\t\t\n\n\t\t\tLabel enforcement: ondemand\n\t\t\t(MCS_label set only if requested.)\n\t\t\n\n\t\t\tLabel enforcement: enforced\n\t\t\t(MCS_label is mandatory.)\n\t\t\n\n\n\nnoselect\n\n\n\t\t        No filter on nodes even if --exclusive=mcs requested.\n\t\t\n\n\t\t\tNo filter on nodes even if --exclusive=mcs requested.\n\t\t\n\n\n\nselect\n\n\n\t\t\tFilter on nodes only if job MCS_label is set.\n\t\t\n\n\t\t\tAlways filter on nodes.\n\t\t\n\n\n\nondemandselect\n\n\n\t\t\tFilter on nodes only if --exclusive=mcs.\n\t\t\n\n\t\t\tFilter on nodes only if --exclusive=mcs.\n\t\t\n\n\nSome examples\nslurm.conf:\n\nMCSPlugin=mcs/account\nMCSParameters=enforced,select,privatedata\n\n\nor\n\n\n\nMCSPlugin=mcs/group\nMCSParameters=ondemand,noselect:groupA|groupB|groupC\n\n\nor\n\n\n\nMCSPlugin=mcs/user\nMCSParameters=enforced,select,privatedata\n\nView MCS parameters\n\n\nConfigured MCS parameters can be viewed using the scontrol command.\n\nscontrol show config |grep MCS\nMCSPlugin          = mcs/group\nMCSParameters      = ondemand,noselect:groupA|groupB|groupC\n\nPut an mcs_label on a job using salloc, sbatch or srun\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB ./job &\n\nPut an mcs_label on a job with exclusivity\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB --exclusive=mcs ./job &\n\n\nPut a different mcs_label on a job with the mcs/account plugin\n\n\n\nsrun -n10 -t 1000 -A another_account_than_default ./job &\n\nView MCS parameters in usage\n\n\nThe squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        },
        {
            "title": "Navigation",
            "content": "\nSlurm Workload Manager\nVersion 24.05\n\n\nAbout\n\nOverview\nRelease Notes\n\n\n\nUsing\n\nDocumentation\nFAQ\nPublications\n\n\n\nInstalling\n\nDownload\nRelated Software\nInstallation Guide\n\n\n\nGetting Help\n\nMailing Lists\nSupport and Training\nTroubleshooting\n\n\n"
        },
        {
            "title": "Configuration",
            "content": "Two parameters are currently available to configure MCS: MCSPlugin\nand MCSParameters.\n\n\nMCSPlugin Specifies which plugin should be used. Plugins are\nmutually exclusive, and the type of label to be associated depends\non the loaded plugin.\n\nmcs/none is the default and disables MCS labels and functionality.\n\nmcs/account MCS labels can only take a value equal to the job's\n--account. NOTE: this option requires enabling of accounting.\n\nmcs/group MCS labels can only take a value equal to the job's user\ngroup.\n\nmcs/user MCS labels can only take a value equal to the username of\nthe job's --uid.\n\n\n\nMCS_labels on jobs can be displayed through 'squeue' with the format option\nmcslabel or through 'scontrol show job'. Nodes also acquire a MCS_label,\nwhich is inherited from the allocated job's MCS_label. The node's label can be\ndisplayed with 'scontrol show nodes'. The 'sview' command can also be used to\nsee these MCS_labels.\nUsers may either request a particular category label for a job (through the\n--mcs-label option), or use the default value generated by the specific\nMCS plugin implementation. So labels can be configured to be enforced or set\non demand, and the specific MCS Plugin is responsible for checking the validity\nof these labels. When enforced, the MCS Plugin implementation will always\nassociate a MCS label to a submitted job, either the default value or the one\nrequested by the user (if it's considered correct).\nThe selection (exclusivity) of nodes can be filtered on MCS labels either\non demand (ondemand) or always (select) or never (noselect). Users can force\nthe filter with the --exclusive=mcs option (except if noselect mode is\nenabled).\n\nLabel enforcement, node selection filtering policy, private data based on\nlabels and a list of user groups allowed to be mapped to MCS labels can be\nconfigured through MCSParameters option.\n\nMCSParameters Specifies the options to pass to the specific MCS\nPlugin implementation. Options should satisfy the following expression:\n\n\"[ondemand|enforced][,noselect|select|ondemandselect][,privatedata]:[mcs_plugin_parameters]\".\nThe defaults are \"ondemand,ondemandselect\" and no privatedata.\n\n\n\nondemand|enforced set MCS label on jobs either on demand (using\n--mcs-label option) or always\nnoselect|select|ondemandselect select nodes with filter on MCS\nlabel: never, always or on demand (using --exclusive=mcs option)\nprivatedata accordingly with PrivateData specific option:\n\n\nIf configured with privatedata and PrivateData=jobs, job\ninformation is filtered based on their MCS labels.\n\n\nIf configured with privatedata and PrivateData=nodes, node\ninformation is filtered based on their MCS labels.\n\n\nmcs_plugin_parameters Only mcs/group is currently supporting this\noption. It can be used to specify the list of user groups (separated by the\n'|' character) that are allowed to be mapped to MCS labels by the\nmcs/group plugin.\n\n\n\n\nWhen enforcing privatedata with mcs/account, users will need to have an\nassociation with just the relevant Account to see other jobs in that Account.\nIf a Partition is included in the association, it will be over-constrained\nand will not allow them to view other jobs in the Account.\n\nDifferent requests and configurations lead to different combinations of\nuse-cases. The following table is intended to help understand the end user\nthe expected behavior (related to exclusivity) for a subset of these use-cases:\n\n\n\n\n\n\t\t        Node filtering:\n\t\t\n\n\t\t\tLabel enforcement: ondemand\n\t\t\t(MCS_label set only if requested.)\n\t\t\n\n\t\t\tLabel enforcement: enforced\n\t\t\t(MCS_label is mandatory.)\n\t\t\n\n\n\nnoselect\n\n\n\t\t        No filter on nodes even if --exclusive=mcs requested.\n\t\t\n\n\t\t\tNo filter on nodes even if --exclusive=mcs requested.\n\t\t\n\n\n\nselect\n\n\n\t\t\tFilter on nodes only if job MCS_label is set.\n\t\t\n\n\t\t\tAlways filter on nodes.\n\t\t\n\n\n\nondemandselect\n\n\n\t\t\tFilter on nodes only if --exclusive=mcs.\n\t\t\n\n\t\t\tFilter on nodes only if --exclusive=mcs.\n\t\t\n\n\nSome examples\nslurm.conf:\n\nMCSPlugin=mcs/account\nMCSParameters=enforced,select,privatedata\n\n\nor\n\n\n\nMCSPlugin=mcs/group\nMCSParameters=ondemand,noselect:groupA|groupB|groupC\n\n\nor\n\n\n\nMCSPlugin=mcs/user\nMCSParameters=enforced,select,privatedata\n\nView MCS parameters\n\n\nConfigured MCS parameters can be viewed using the scontrol command.\n\nscontrol show config |grep MCS\nMCSPlugin          = mcs/group\nMCSParameters      = ondemand,noselect:groupA|groupB|groupC\n\nPut an mcs_label on a job using salloc, sbatch or srun\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB ./job &\n\nPut an mcs_label on a job with exclusivity\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB --exclusive=mcs ./job &\n\n\nPut a different mcs_label on a job with the mcs/account plugin\n\n\n\nsrun -n10 -t 1000 -A another_account_than_default ./job &\n\nView MCS parameters in usage\n\n\nThe squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        },
        {
            "title": "Some examples",
            "content": "slurm.conf:\n\nMCSPlugin=mcs/account\nMCSParameters=enforced,select,privatedata\n\n\nor\n\n\n\nMCSPlugin=mcs/group\nMCSParameters=ondemand,noselect:groupA|groupB|groupC\n\n\nor\n\n\n\nMCSPlugin=mcs/user\nMCSParameters=enforced,select,privatedata\n\nView MCS parameters\n\n\nConfigured MCS parameters can be viewed using the scontrol command.\n\nscontrol show config |grep MCS\nMCSPlugin          = mcs/group\nMCSParameters      = ondemand,noselect:groupA|groupB|groupC\n\nPut an mcs_label on a job using salloc, sbatch or srun\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB ./job &\n\nPut an mcs_label on a job with exclusivity\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB --exclusive=mcs ./job &\n\n\nPut a different mcs_label on a job with the mcs/account plugin\n\n\n\nsrun -n10 -t 1000 -A another_account_than_default ./job &\n\nView MCS parameters in usage\n\n\nThe squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        },
        {
            "title": "View MCS parameters\n\n",
            "content": "Configured MCS parameters can be viewed using the scontrol command.\n\nscontrol show config |grep MCS\nMCSPlugin          = mcs/group\nMCSParameters      = ondemand,noselect:groupA|groupB|groupC\n\nPut an mcs_label on a job using salloc, sbatch or srun\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB ./job &\n\nPut an mcs_label on a job with exclusivity\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB --exclusive=mcs ./job &\n\n\nPut a different mcs_label on a job with the mcs/account plugin\n\n\n\nsrun -n10 -t 1000 -A another_account_than_default ./job &\n\nView MCS parameters in usage\n\n\nThe squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        },
        {
            "title": "View MCS parameters in usage\n\n",
            "content": "The squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        },
        {
            "title": "Limitations\n",
            "content": "Use of MCS restricts the operation of Preemption.\nSpecifically, any job that has an MCS label and requests node exclusivity\naccording to that label will be prevented from preempting or being preempted by\nany job that doesn't match that label. If\nMCSParameters=enforced,select is set, these restrictions will\napply to all jobs.ConfigurationTwo parameters are currently available to configure MCS: MCSPlugin\nand MCSParameters.\n\n\nMCSPlugin Specifies which plugin should be used. Plugins are\nmutually exclusive, and the type of label to be associated depends\non the loaded plugin.\n\nmcs/none is the default and disables MCS labels and functionality.\n\nmcs/account MCS labels can only take a value equal to the job's\n--account. NOTE: this option requires enabling of accounting.\n\nmcs/group MCS labels can only take a value equal to the job's user\ngroup.\n\nmcs/user MCS labels can only take a value equal to the username of\nthe job's --uid.\n\n\n\nMCS_labels on jobs can be displayed through 'squeue' with the format option\nmcslabel or through 'scontrol show job'. Nodes also acquire a MCS_label,\nwhich is inherited from the allocated job's MCS_label. The node's label can be\ndisplayed with 'scontrol show nodes'. The 'sview' command can also be used to\nsee these MCS_labels.\nUsers may either request a particular category label for a job (through the\n--mcs-label option), or use the default value generated by the specific\nMCS plugin implementation. So labels can be configured to be enforced or set\non demand, and the specific MCS Plugin is responsible for checking the validity\nof these labels. When enforced, the MCS Plugin implementation will always\nassociate a MCS label to a submitted job, either the default value or the one\nrequested by the user (if it's considered correct).\nThe selection (exclusivity) of nodes can be filtered on MCS labels either\non demand (ondemand) or always (select) or never (noselect). Users can force\nthe filter with the --exclusive=mcs option (except if noselect mode is\nenabled).\n\nLabel enforcement, node selection filtering policy, private data based on\nlabels and a list of user groups allowed to be mapped to MCS labels can be\nconfigured through MCSParameters option.\n\nMCSParameters Specifies the options to pass to the specific MCS\nPlugin implementation. Options should satisfy the following expression:\n\n\"[ondemand|enforced][,noselect|select|ondemandselect][,privatedata]:[mcs_plugin_parameters]\".\nThe defaults are \"ondemand,ondemandselect\" and no privatedata.\n\n\n\nondemand|enforced set MCS label on jobs either on demand (using\n--mcs-label option) or always\nnoselect|select|ondemandselect select nodes with filter on MCS\nlabel: never, always or on demand (using --exclusive=mcs option)\nprivatedata accordingly with PrivateData specific option:\n\n\nIf configured with privatedata and PrivateData=jobs, job\ninformation is filtered based on their MCS labels.\n\n\nIf configured with privatedata and PrivateData=nodes, node\ninformation is filtered based on their MCS labels.\n\n\nmcs_plugin_parameters Only mcs/group is currently supporting this\noption. It can be used to specify the list of user groups (separated by the\n'|' character) that are allowed to be mapped to MCS labels by the\nmcs/group plugin.\n\n\n\n\nWhen enforcing privatedata with mcs/account, users will need to have an\nassociation with just the relevant Account to see other jobs in that Account.\nIf a Partition is included in the association, it will be over-constrained\nand will not allow them to view other jobs in the Account.\n\nDifferent requests and configurations lead to different combinations of\nuse-cases. The following table is intended to help understand the end user\nthe expected behavior (related to exclusivity) for a subset of these use-cases:\n\n\n\n\n\n\t\t        Node filtering:\n\t\t\n\n\t\t\tLabel enforcement: ondemand\n\t\t\t(MCS_label set only if requested.)\n\t\t\n\n\t\t\tLabel enforcement: enforced\n\t\t\t(MCS_label is mandatory.)\n\t\t\n\n\n\nnoselect\n\n\n\t\t        No filter on nodes even if --exclusive=mcs requested.\n\t\t\n\n\t\t\tNo filter on nodes even if --exclusive=mcs requested.\n\t\t\n\n\n\nselect\n\n\n\t\t\tFilter on nodes only if job MCS_label is set.\n\t\t\n\n\t\t\tAlways filter on nodes.\n\t\t\n\n\n\nondemandselect\n\n\n\t\t\tFilter on nodes only if --exclusive=mcs.\n\t\t\n\n\t\t\tFilter on nodes only if --exclusive=mcs.\n\t\t\n\n\nSome examples\nslurm.conf:\n\nMCSPlugin=mcs/account\nMCSParameters=enforced,select,privatedata\n\n\nor\n\n\n\nMCSPlugin=mcs/group\nMCSParameters=ondemand,noselect:groupA|groupB|groupC\n\n\nor\n\n\n\nMCSPlugin=mcs/user\nMCSParameters=enforced,select,privatedata\n\nView MCS parameters\n\n\nConfigured MCS parameters can be viewed using the scontrol command.\n\nscontrol show config |grep MCS\nMCSPlugin          = mcs/group\nMCSParameters      = ondemand,noselect:groupA|groupB|groupC\n\nPut an mcs_label on a job using salloc, sbatch or srun\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB ./job &\n\nPut an mcs_label on a job with exclusivity\n\n\n\nsrun -n10 -t 1000 --mcs-label=groupB --exclusive=mcs ./job &\n\n\nPut a different mcs_label on a job with the mcs/account plugin\n\n\n\nsrun -n10 -t 1000 -A another_account_than_default ./job &\n\nView MCS parameters in usage\n\n\nThe squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        },
        {
            "title": "Put an mcs_label on a job using salloc, sbatch or srun\n\n",
            "content": "\nsrun -n10 -t 1000 --mcs-label=groupB ./job &\nPut an mcs_label on a job with exclusivity\n\n\nsrun -n10 -t 1000 --mcs-label=groupB --exclusive=mcs ./job &\n\nPut a different mcs_label on a job with the mcs/account plugin\n\n\nsrun -n10 -t 1000 -A another_account_than_default ./job &\nView MCS parameters in usage\n\nThe squeue command can also display the MCS with mcslabel\nformat option\n\nsqueue -O jobid,username,mcslabel\nJOBID               USER                MCSLABEL\n2                   foo                 groupA\n3\t            bar                 groupB\n\nThe scontrol command will now display the MCS_label\n\nscontrol show nodes\nNodeName=node0001 Arch=x86_64 CoresPerSocket=4\n   CPUAlloc=0 CPUTot=8 CPULoad=0.01 Features=(null)\n   Gres=(null)\n   NodeAddr=noder0001 NodeHostName=node0001 Version=15.08\n   OS=Linux RealMemory=23780 AllocMem=0 Sockets=2 Boards=1\n   State=IDLE ThreadsPerCore=1 TmpDisk=0 Weight=40 Owner=N/A MCS_label=groupA\n   BootTime=2015-08-05T10:14:41 SlurmdStartTime=2015-09-07T13:42:28\n   CurrentWatts=0 AveWatts=0\n\nLast modified 21 May 2024\n"
        }
    ]
}